<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pib_27.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>